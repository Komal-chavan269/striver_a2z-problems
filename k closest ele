class Compare
{
public:
    int operator() (pair<int,int>&a, pair<int,int>&b)
    {
        if(a.first == b.first){
          return a.second>b.second;
      }
      return a.first<b.first;
    }
};
class Solution {
  public:
     
    vector<int> printKClosest(vector<int> arr, int n, int k, int x) {
        // code here
        priority_queue<pair<int,int>, vector<pair<int,int>>, Compare>pq;
        for(int i = 0;i<n;i++){
            int val = abs(arr[i]-x);
            if(val==0)continue;
            pq.push({val,arr[i]});
            while(pq.size()>k){
                pq.pop();
            }
        }
        vector<int>ans;
        while(!pq.empty()){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
